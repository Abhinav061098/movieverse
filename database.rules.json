{
  "rules": {
    "users": {
      "$uid": {
        ".read": "auth != null && auth.uid === $uid",
        ".write": "auth != null && auth.uid === $uid",
        "profile": {
          ".validate": "newData.hasChildren(['name', 'email'])",
          "name": { ".validate": "newData.isString() && newData.val().length > 0" },
          "email": { ".validate": "newData.isString() && newData.val().matches(/^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/)" }
        }
      }
    },
    "favorites": {
      "$uid": {
        ".read": "auth != null && auth.uid === $uid",
        ".write": "auth != null && auth.uid === $uid",
        "movies": {
          "$movieId": {
            ".validate": "newData.hasChildren(['id', 'title', 'mediaType'])",
            "id": { ".validate": "newData.isNumber() && newData.val() > 0" },
            "title": { ".validate": "newData.isString() && newData.val().length > 0" },
            "mediaType": { ".validate": "newData.isString() && newData.val() === 'movie'" },
            "genreIds": { 
              ".validate": "newData.hasChildren() && newData.val() != null",
              "$index": {
                ".validate": "newData.isNumber() && newData.val() > 0"
              }
            }
          }
        },
        "tv_shows": {
          "$showId": {
            ".validate": "newData.hasChildren(['id', 'name', 'mediaType'])",
            "id": { ".validate": "newData.isNumber() && newData.val() > 0" },
            "name": { ".validate": "newData.isString() && newData.val().length > 0" },
            "mediaType": { ".validate": "newData.isString() && newData.val() === 'tv'" },
            "genreIds": {
              ".validate": "newData.hasChildren() && newData.val() != null",
              "$index": {
                ".validate": "newData.isNumber() && newData.val() > 0"
              }
            }
          }
        }
      }
    },    "watchlists": {
      "$uid": {
        ".read": "auth != null && auth.uid === $uid",
        ".write": "auth != null && auth.uid === $uid",
        "$watchlistId": {
          ".validate": "newData.hasChildren(['name', 'created_at', 'items', 'description'])",
          "name": { ".validate": "newData.isString() && newData.val().length > 0" },
          "description": { ".validate": "!newData.exists() || newData.isString()" },
          "created_at": { ".validate": "newData.isString() && newData.val().matches(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/)" },
          "items": {
            "$itemId": {
              ".validate": "newData.hasChildren(['id', 'media_type', 'added_at'])",
              "id": { ".validate": "newData.isNumber() && newData.val() > 0" },
              "media_type": { ".validate": "newData.isString() && (newData.val() === 'movie' || newData.val() === 'tv')" },
              "poster_path": { ".validate": "!newData.exists() || newData.isString()" },
              "backdrop_path": { ".validate": "!newData.exists() || newData.isString()" },
              "overview": { ".validate": "!newData.exists() || newData.isString()" },
              "vote_average": { ".validate": "newData.isNumber() && newData.val() >= 0 && newData.val() <= 10" },
              "genre_ids": { 
                "$index": { ".validate": "newData.isNumber() && newData.val() > 0" }
              },
              "added_at": { ".validate": "newData.isString() && newData.val().matches(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/)" },
              "title": { ".validate": "(!newData.exists() || newData.isString()) && (!newData.parent().child('media_type').exists() || newData.parent().child('media_type').val() === 'movie')" },
              "release_date": { ".validate": "!newData.exists() || newData.isString()" },
              "name": { ".validate": "(!newData.exists() || newData.isString()) && (!newData.parent().child('media_type').exists() || newData.parent().child('media_type').val() === 'tv')" },
              "first_air_date": { ".validate": "!newData.exists() || newData.isString()" }
            }
          }
        }
      }
    }
  }
}